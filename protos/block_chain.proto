syntax = "proto3";

package main;

option go_package = "Blockchain/protos/block_chain"; 

// Main message containing two types
message MainMessage {
  oneof message_type {
    BlockMessage block_message = 1;
    NodeMessage node_message = 2;
  }
}

// Block-related messages
message BlockMessage {
  oneof block_message_type {
    BlockResponse block_response = 1;
    BlocksResponse blocks_response = 2;
    BlockchainSyncRequest blockchain_sync_request = 3;
    GetLatestBlockRequest get_latest_block_request = 4;
    Empty empty = 5;
  }
}

// Node-related messages
message NodeMessage {
  oneof node_message_type {
    WelcomeRequest welcome_request = 1;
    WelcomeResponse welcome_response = 2;
    PongResponse pong_response = 3;
    Empty empty = 4;
  }
}

//******************************** NODE MESSAGES */

message WelcomeRequest {
  bytes sender_address = 1;
}
message WelcomeResponse {
  repeated bytes node_adresses = 1;
}
message PongResponse {
  bool success = 1;
}
/********************************  NODE MESSAGES */

/******************************** BLOCK MESSAGES */
message Empty {}

message Block {
  uint64 index = 1;
  uint64 timestamp = 2;
  repeated Transaction transactions = 3;
  bytes previousHash = 4;
  bytes hash = 5;
  uint64 data = 6;
  bool checkpoint = 7; // Added this line
}
message Transaction {
  bytes sender = 1;
  bytes receiver = 2;
  double amount = 3;
}

message BlockResponse {
  bool success = 1;
  bytes message = 2;
  Block block = 3;
}

message BlocksResponse {
  repeated Block blocks = 1;
}

message GetLatestBlockRequest {
  Empty empty = 1;
}

message BlockchainSyncRequest {
  bytes hash = 1;
  bytes sender_address = 2;
}

/******************************** BLOCK MESSAGES */
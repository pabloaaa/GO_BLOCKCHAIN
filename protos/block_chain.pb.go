// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: block_chain.proto

package block_chain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Main message containing two types
type MainMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//
	//	*MainMessage_BlockMessage
	//	*MainMessage_NodeMessage
	MessageType isMainMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *MainMessage) Reset() {
	*x = MainMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainMessage) ProtoMessage() {}

func (x *MainMessage) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainMessage.ProtoReflect.Descriptor instead.
func (*MainMessage) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{0}
}

func (m *MainMessage) GetMessageType() isMainMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *MainMessage) GetBlockMessage() *BlockMessage {
	if x, ok := x.GetMessageType().(*MainMessage_BlockMessage); ok {
		return x.BlockMessage
	}
	return nil
}

func (x *MainMessage) GetNodeMessage() *NodeMessage {
	if x, ok := x.GetMessageType().(*MainMessage_NodeMessage); ok {
		return x.NodeMessage
	}
	return nil
}

type isMainMessage_MessageType interface {
	isMainMessage_MessageType()
}

type MainMessage_BlockMessage struct {
	BlockMessage *BlockMessage `protobuf:"bytes,1,opt,name=block_message,json=blockMessage,proto3,oneof"`
}

type MainMessage_NodeMessage struct {
	NodeMessage *NodeMessage `protobuf:"bytes,2,opt,name=node_message,json=nodeMessage,proto3,oneof"`
}

func (*MainMessage_BlockMessage) isMainMessage_MessageType() {}

func (*MainMessage_NodeMessage) isMainMessage_MessageType() {}

// Block-related messages
type BlockMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to BlockMessageType:
	//
	//	*BlockMessage_BlockRequest
	//	*BlockMessage_BlockResponse
	//	*BlockMessage_BlockchainResponse
	//	*BlockMessage_BlocksResponse
	//	*BlockMessage_TransactionPoolResponse
	//	*BlockMessage_LatestBlockResponse
	//	*BlockMessage_BlockUpdateRequest
	//	*BlockMessage_BlockUpdateResponse
	//	*BlockMessage_GetLatestBlockRequest
	//	*BlockMessage_GetBlockRequest_
	//	*BlockMessage_Empty
	BlockMessageType isBlockMessage_BlockMessageType `protobuf_oneof:"block_message_type"`
}

func (x *BlockMessage) Reset() {
	*x = BlockMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMessage) ProtoMessage() {}

func (x *BlockMessage) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMessage.ProtoReflect.Descriptor instead.
func (*BlockMessage) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{1}
}

func (m *BlockMessage) GetBlockMessageType() isBlockMessage_BlockMessageType {
	if m != nil {
		return m.BlockMessageType
	}
	return nil
}

func (x *BlockMessage) GetBlockRequest() *BlockRequest {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlockRequest); ok {
		return x.BlockRequest
	}
	return nil
}

func (x *BlockMessage) GetBlockResponse() *BlockResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlockResponse); ok {
		return x.BlockResponse
	}
	return nil
}

func (x *BlockMessage) GetBlockchainResponse() *BlockchainResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlockchainResponse); ok {
		return x.BlockchainResponse
	}
	return nil
}

func (x *BlockMessage) GetBlocksResponse() *BlocksResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlocksResponse); ok {
		return x.BlocksResponse
	}
	return nil
}

func (x *BlockMessage) GetTransactionPoolResponse() *TransactionPoolResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_TransactionPoolResponse); ok {
		return x.TransactionPoolResponse
	}
	return nil
}

func (x *BlockMessage) GetLatestBlockResponse() *LatestBlockResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_LatestBlockResponse); ok {
		return x.LatestBlockResponse
	}
	return nil
}

func (x *BlockMessage) GetBlockUpdateRequest() *BlockUpdateRequest {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlockUpdateRequest); ok {
		return x.BlockUpdateRequest
	}
	return nil
}

func (x *BlockMessage) GetBlockUpdateResponse() *BlockUpdateResponse {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_BlockUpdateResponse); ok {
		return x.BlockUpdateResponse
	}
	return nil
}

func (x *BlockMessage) GetGetLatestBlockRequest() *GetLatestBlockRequest {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_GetLatestBlockRequest); ok {
		return x.GetLatestBlockRequest
	}
	return nil
}

func (x *BlockMessage) GetGetBlockRequest_() *GetBlockRequest {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_GetBlockRequest_); ok {
		return x.GetBlockRequest_
	}
	return nil
}

func (x *BlockMessage) GetEmpty() *Empty {
	if x, ok := x.GetBlockMessageType().(*BlockMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

type isBlockMessage_BlockMessageType interface {
	isBlockMessage_BlockMessageType()
}

type BlockMessage_BlockRequest struct {
	BlockRequest *BlockRequest `protobuf:"bytes,1,opt,name=block_request,json=blockRequest,proto3,oneof"`
}

type BlockMessage_BlockResponse struct {
	BlockResponse *BlockResponse `protobuf:"bytes,2,opt,name=block_response,json=blockResponse,proto3,oneof"`
}

type BlockMessage_BlockchainResponse struct {
	BlockchainResponse *BlockchainResponse `protobuf:"bytes,3,opt,name=blockchain_response,json=blockchainResponse,proto3,oneof"`
}

type BlockMessage_BlocksResponse struct {
	BlocksResponse *BlocksResponse `protobuf:"bytes,4,opt,name=blocks_response,json=blocksResponse,proto3,oneof"`
}

type BlockMessage_TransactionPoolResponse struct {
	TransactionPoolResponse *TransactionPoolResponse `protobuf:"bytes,5,opt,name=transaction_pool_response,json=transactionPoolResponse,proto3,oneof"`
}

type BlockMessage_LatestBlockResponse struct {
	LatestBlockResponse *LatestBlockResponse `protobuf:"bytes,6,opt,name=latest_block_response,json=latestBlockResponse,proto3,oneof"`
}

type BlockMessage_BlockUpdateRequest struct {
	BlockUpdateRequest *BlockUpdateRequest `protobuf:"bytes,7,opt,name=block_update_request,json=blockUpdateRequest,proto3,oneof"`
}

type BlockMessage_BlockUpdateResponse struct {
	BlockUpdateResponse *BlockUpdateResponse `protobuf:"bytes,8,opt,name=block_update_response,json=blockUpdateResponse,proto3,oneof"`
}

type BlockMessage_GetLatestBlockRequest struct {
	GetLatestBlockRequest *GetLatestBlockRequest `protobuf:"bytes,9,opt,name=get_latest_block_request,json=getLatestBlockRequest,proto3,oneof"`
}

type BlockMessage_GetBlockRequest_ struct {
	GetBlockRequest_ *GetBlockRequest `protobuf:"bytes,10,opt,name=get_block_request,json=getBlockRequest,proto3,oneof"`
}

type BlockMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,11,opt,name=empty,proto3,oneof"`
}

func (*BlockMessage_BlockRequest) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_BlockResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_BlockchainResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_BlocksResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_TransactionPoolResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_LatestBlockResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_BlockUpdateRequest) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_BlockUpdateResponse) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_GetLatestBlockRequest) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_GetBlockRequest_) isBlockMessage_BlockMessageType() {}

func (*BlockMessage_Empty) isBlockMessage_BlockMessageType() {}

// Node-related messages
type NodeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to NodeMessageType:
	//
	//	*NodeMessage_NodesResponse
	//	*NodeMessage_WelcomeRequest
	//	*NodeMessage_WelcomeResponse
	//	*NodeMessage_PongResponse
	//	*NodeMessage_Empty
	NodeMessageType isNodeMessage_NodeMessageType `protobuf_oneof:"node_message_type"`
}

func (x *NodeMessage) Reset() {
	*x = NodeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMessage) ProtoMessage() {}

func (x *NodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMessage.ProtoReflect.Descriptor instead.
func (*NodeMessage) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{2}
}

func (m *NodeMessage) GetNodeMessageType() isNodeMessage_NodeMessageType {
	if m != nil {
		return m.NodeMessageType
	}
	return nil
}

func (x *NodeMessage) GetNodesResponse() *NodesResponse {
	if x, ok := x.GetNodeMessageType().(*NodeMessage_NodesResponse); ok {
		return x.NodesResponse
	}
	return nil
}

func (x *NodeMessage) GetWelcomeRequest() *WelcomeRequest {
	if x, ok := x.GetNodeMessageType().(*NodeMessage_WelcomeRequest); ok {
		return x.WelcomeRequest
	}
	return nil
}

func (x *NodeMessage) GetWelcomeResponse() *WelcomeResponse {
	if x, ok := x.GetNodeMessageType().(*NodeMessage_WelcomeResponse); ok {
		return x.WelcomeResponse
	}
	return nil
}

func (x *NodeMessage) GetPongResponse() *PongResponse {
	if x, ok := x.GetNodeMessageType().(*NodeMessage_PongResponse); ok {
		return x.PongResponse
	}
	return nil
}

func (x *NodeMessage) GetEmpty() *Empty {
	if x, ok := x.GetNodeMessageType().(*NodeMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

type isNodeMessage_NodeMessageType interface {
	isNodeMessage_NodeMessageType()
}

type NodeMessage_NodesResponse struct {
	NodesResponse *NodesResponse `protobuf:"bytes,1,opt,name=nodes_response,json=nodesResponse,proto3,oneof"`
}

type NodeMessage_WelcomeRequest struct {
	WelcomeRequest *WelcomeRequest `protobuf:"bytes,2,opt,name=welcome_request,json=welcomeRequest,proto3,oneof"`
}

type NodeMessage_WelcomeResponse struct {
	WelcomeResponse *WelcomeResponse `protobuf:"bytes,3,opt,name=welcome_response,json=welcomeResponse,proto3,oneof"`
}

type NodeMessage_PongResponse struct {
	PongResponse *PongResponse `protobuf:"bytes,4,opt,name=pong_response,json=pongResponse,proto3,oneof"`
}

type NodeMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,5,opt,name=empty,proto3,oneof"`
}

func (*NodeMessage_NodesResponse) isNodeMessage_NodeMessageType() {}

func (*NodeMessage_WelcomeRequest) isNodeMessage_NodeMessageType() {}

func (*NodeMessage_WelcomeResponse) isNodeMessage_NodeMessageType() {}

func (*NodeMessage_PongResponse) isNodeMessage_NodeMessageType() {}

func (*NodeMessage_Empty) isNodeMessage_NodeMessageType() {}

type NodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes [][]byte `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodesResponse) Reset() {
	*x = NodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesResponse) ProtoMessage() {}

func (x *NodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesResponse.ProtoReflect.Descriptor instead.
func (*NodesResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{3}
}

func (x *NodesResponse) GetNodes() [][]byte {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type WelcomeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WelcomeRequest) Reset() {
	*x = WelcomeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WelcomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeRequest) ProtoMessage() {}

func (x *WelcomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeRequest.ProtoReflect.Descriptor instead.
func (*WelcomeRequest) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{4}
}

func (x *WelcomeRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type WelcomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WelcomeResponse) Reset() {
	*x = WelcomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WelcomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeResponse) ProtoMessage() {}

func (x *WelcomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeResponse.ProtoReflect.Descriptor instead.
func (*WelcomeResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{5}
}

func (x *WelcomeResponse) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type PongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{6}
}

func (x *PongResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ******************************* BLOCK MESSAGES
type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{7}
}

func (x *BlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type BlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Block   *Block `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockResponse) Reset() {
	*x = BlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse) ProtoMessage() {}

func (x *BlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse.ProtoReflect.Descriptor instead.
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{8}
}

func (x *BlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BlockResponse) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *BlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{9}
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        uint64         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp    uint64         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	PreviousHash []byte         `protobuf:"bytes,4,opt,name=previousHash,proto3" json:"previousHash,omitempty"`
	Hash         []byte         `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Data         uint64         `protobuf:"varint,6,opt,name=data,proto3" json:"data,omitempty"`
	Checkpoint   bool           `protobuf:"varint,7,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"` // Added this line
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{10}
}

func (x *Block) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Block) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetPreviousHash() []byte {
	if x != nil {
		return x.PreviousHash
	}
	return nil
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

func (x *Block) GetCheckpoint() bool {
	if x != nil {
		return x.Checkpoint
	}
	return false
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   []byte  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver []byte  `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{11}
}

func (x *Transaction) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type BlockchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *BlockchainResponse) Reset() {
	*x = BlockchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainResponse) ProtoMessage() {}

func (x *BlockchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainResponse.ProtoReflect.Descriptor instead.
func (*BlockchainResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{12}
}

func (x *BlockchainResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type BlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *BlocksResponse) Reset() {
	*x = BlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlocksResponse) ProtoMessage() {}

func (x *BlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlocksResponse.ProtoReflect.Descriptor instead.
func (*BlocksResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{13}
}

func (x *BlocksResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type TransactionPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TransactionPoolResponse) Reset() {
	*x = TransactionPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPoolResponse) ProtoMessage() {}

func (x *TransactionPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPoolResponse.ProtoReflect.Descriptor instead.
func (*TransactionPoolResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionPoolResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type LatestBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *LatestBlockResponse) Reset() {
	*x = LatestBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBlockResponse) ProtoMessage() {}

func (x *LatestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestBlockResponse.ProtoReflect.Descriptor instead.
func (*LatestBlockResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{15}
}

func (x *LatestBlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type BlockUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockUpdateRequest) Reset() {
	*x = BlockUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockUpdateRequest) ProtoMessage() {}

func (x *BlockUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockUpdateRequest.ProtoReflect.Descriptor instead.
func (*BlockUpdateRequest) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{16}
}

func (x *BlockUpdateRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type BlockUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockUpdateResponse) Reset() {
	*x = BlockUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockUpdateResponse) ProtoMessage() {}

func (x *BlockUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockUpdateResponse.ProtoReflect.Descriptor instead.
func (*BlockUpdateResponse) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{17}
}

func (x *BlockUpdateResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetLatestBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestBlockRequest) Reset() {
	*x = GetLatestBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockRequest) ProtoMessage() {}

func (x *GetLatestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockRequest.ProtoReflect.Descriptor instead.
func (*GetLatestBlockRequest) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{18}
}

type GetBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_chain_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_chain_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_block_chain_proto_rawDescGZIP(), []int{19}
}

func (x *GetBlockRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_block_chain_proto protoreflect.FileDescriptor

var file_block_chain_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x4d, 0x61,
	0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xba, 0x06, 0x0a,
	0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x15, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x11, 0x67, 0x65, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x67,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x0b, 0x4e, 0x6f,
	0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x77, 0x65, 0x6c, 0x63, 0x6f,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x77, 0x65, 0x6c, 0x63,
	0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x65, 0x6c,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d,
	0x70, 0x6f, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x0a, 0x11,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x25, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x57, 0x65, 0x6c, 0x63,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x0c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x66,
	0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0xde, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x59, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x12, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x50, 0x0a,
	0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x38, 0x0a, 0x13, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x37, 0x0a, 0x12, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x38, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x17, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x1f, 0x5a, 0x1d,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_chain_proto_rawDescOnce sync.Once
	file_block_chain_proto_rawDescData = file_block_chain_proto_rawDesc
)

func file_block_chain_proto_rawDescGZIP() []byte {
	file_block_chain_proto_rawDescOnce.Do(func() {
		file_block_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_chain_proto_rawDescData)
	})
	return file_block_chain_proto_rawDescData
}

var file_block_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_block_chain_proto_goTypes = []interface{}{
	(*MainMessage)(nil),             // 0: main.MainMessage
	(*BlockMessage)(nil),            // 1: main.BlockMessage
	(*NodeMessage)(nil),             // 2: main.NodeMessage
	(*NodesResponse)(nil),           // 3: main.NodesResponse
	(*WelcomeRequest)(nil),          // 4: main.WelcomeRequest
	(*WelcomeResponse)(nil),         // 5: main.WelcomeResponse
	(*PongResponse)(nil),            // 6: main.PongResponse
	(*BlockRequest)(nil),            // 7: main.BlockRequest
	(*BlockResponse)(nil),           // 8: main.BlockResponse
	(*Empty)(nil),                   // 9: main.Empty
	(*Block)(nil),                   // 10: main.Block
	(*Transaction)(nil),             // 11: main.Transaction
	(*BlockchainResponse)(nil),      // 12: main.BlockchainResponse
	(*BlocksResponse)(nil),          // 13: main.BlocksResponse
	(*TransactionPoolResponse)(nil), // 14: main.TransactionPoolResponse
	(*LatestBlockResponse)(nil),     // 15: main.LatestBlockResponse
	(*BlockUpdateRequest)(nil),      // 16: main.BlockUpdateRequest
	(*BlockUpdateResponse)(nil),     // 17: main.BlockUpdateResponse
	(*GetLatestBlockRequest)(nil),   // 18: main.GetLatestBlockRequest
	(*GetBlockRequest)(nil),         // 19: main.GetBlockRequest
}
var file_block_chain_proto_depIdxs = []int32{
	1,  // 0: main.MainMessage.block_message:type_name -> main.BlockMessage
	2,  // 1: main.MainMessage.node_message:type_name -> main.NodeMessage
	7,  // 2: main.BlockMessage.block_request:type_name -> main.BlockRequest
	8,  // 3: main.BlockMessage.block_response:type_name -> main.BlockResponse
	12, // 4: main.BlockMessage.blockchain_response:type_name -> main.BlockchainResponse
	13, // 5: main.BlockMessage.blocks_response:type_name -> main.BlocksResponse
	14, // 6: main.BlockMessage.transaction_pool_response:type_name -> main.TransactionPoolResponse
	15, // 7: main.BlockMessage.latest_block_response:type_name -> main.LatestBlockResponse
	16, // 8: main.BlockMessage.block_update_request:type_name -> main.BlockUpdateRequest
	17, // 9: main.BlockMessage.block_update_response:type_name -> main.BlockUpdateResponse
	18, // 10: main.BlockMessage.get_latest_block_request:type_name -> main.GetLatestBlockRequest
	19, // 11: main.BlockMessage.get_block_request:type_name -> main.GetBlockRequest
	9,  // 12: main.BlockMessage.empty:type_name -> main.Empty
	3,  // 13: main.NodeMessage.nodes_response:type_name -> main.NodesResponse
	4,  // 14: main.NodeMessage.welcome_request:type_name -> main.WelcomeRequest
	5,  // 15: main.NodeMessage.welcome_response:type_name -> main.WelcomeResponse
	6,  // 16: main.NodeMessage.pong_response:type_name -> main.PongResponse
	9,  // 17: main.NodeMessage.empty:type_name -> main.Empty
	10, // 18: main.BlockRequest.block:type_name -> main.Block
	10, // 19: main.BlockResponse.block:type_name -> main.Block
	11, // 20: main.Block.transactions:type_name -> main.Transaction
	10, // 21: main.BlockchainResponse.blocks:type_name -> main.Block
	10, // 22: main.BlocksResponse.blocks:type_name -> main.Block
	11, // 23: main.TransactionPoolResponse.transactions:type_name -> main.Transaction
	10, // 24: main.LatestBlockResponse.block:type_name -> main.Block
	10, // 25: main.BlockUpdateRequest.block:type_name -> main.Block
	10, // 26: main.BlockUpdateResponse.block:type_name -> main.Block
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_block_chain_proto_init() }
func file_block_chain_proto_init() {
	if File_block_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WelcomeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WelcomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_chain_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_block_chain_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MainMessage_BlockMessage)(nil),
		(*MainMessage_NodeMessage)(nil),
	}
	file_block_chain_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BlockMessage_BlockRequest)(nil),
		(*BlockMessage_BlockResponse)(nil),
		(*BlockMessage_BlockchainResponse)(nil),
		(*BlockMessage_BlocksResponse)(nil),
		(*BlockMessage_TransactionPoolResponse)(nil),
		(*BlockMessage_LatestBlockResponse)(nil),
		(*BlockMessage_BlockUpdateRequest)(nil),
		(*BlockMessage_BlockUpdateResponse)(nil),
		(*BlockMessage_GetLatestBlockRequest)(nil),
		(*BlockMessage_GetBlockRequest_)(nil),
		(*BlockMessage_Empty)(nil),
	}
	file_block_chain_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*NodeMessage_NodesResponse)(nil),
		(*NodeMessage_WelcomeRequest)(nil),
		(*NodeMessage_WelcomeResponse)(nil),
		(*NodeMessage_PongResponse)(nil),
		(*NodeMessage_Empty)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_block_chain_proto_goTypes,
		DependencyIndexes: file_block_chain_proto_depIdxs,
		MessageInfos:      file_block_chain_proto_msgTypes,
	}.Build()
	File_block_chain_proto = out.File
	file_block_chain_proto_rawDesc = nil
	file_block_chain_proto_goTypes = nil
	file_block_chain_proto_depIdxs = nil
}
